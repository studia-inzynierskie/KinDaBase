-- Generated by Oracle SQL Developer Data Modeler 20.2.0.167.1538
--   at:        2022-05-27 13:39:22 CEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

DECLARE
    v_count  INT;
    v_name VARCHAR2(22);
    TYPE namesarray IS VARRAY(15) OF VARCHAR2(20);
    names    namesarray;
BEGIN
    names := namesarray('users', 'categories', 'series', 'seasons', 'episodes',
                        'actors', 'movies', 'movies_reviews', 'series_reviews',
                        'movies_categories', 'series_categories', 'actors_reviews',
                        'series_actors', 'movies_actors', 
                        'users_user_id_seq');

    FOR i IN 1..names.count LOOP
        v_name := names(i);
        
        SELECT COUNT(*) INTO v_count FROM user_tables WHERE table_name = upper(v_name);
        IF v_count = 1 THEN
            DBMS_OUTPUT.PUT_LINE('Dropping table: ' || v_name);
            EXECUTE IMMEDIATE 'DROP TABLE '|| v_name || ' CASCADE CONSTRAINTS';
        END IF;
    END LOOP;
END;
/

DROP SEQUENCE actors_actor_id_seq;
DROP SEQUENCE movies_movie_id_seq;
DROP SEQUENCE users_user_id_seq;
DROP SEQUENCE series_series_id_seq;
DROP SEQUENCE episodes_episode_id_seq;
DROP SEQUENCE seasons_season_id_seq;
DROP SEQUENCE movies_reviews_movie_review_id;
DROP SEQUENCE series_reviews_series_review_i;
DROP SEQUENCE actors_reviews_actor_review_id;
DROP SEQUENCE categories_category_id_seq;
DROP SEQUENCE movies_categories_movie_catego;
DROP SEQUENCE series_categories_series_categ;
DROP SEQUENCE movies_actors_movie_actor_id;
DROP SEQUENCE series_actors_series_actor_id;

CREATE TABLE actors (
    actor_id    INTEGER NOT NULL,
    name        VARCHAR2(30 CHAR) NOT NULL,
    surname     VARCHAR2(30 CHAR) NOT NULL,
    rating      NUMBER(4, 2),
    birth_date  DATE,
    sex         VARCHAR2(5 CHAR)
);

ALTER TABLE actors ADD CONSTRAINT actors_pk PRIMARY KEY ( actor_id );

CREATE TABLE actors_reviews (
    actor_review_id  INTEGER NOT NULL,
    actor_id         INTEGER NOT NULL,
    user_id          INTEGER NOT NULL,
    rating           NUMBER(4, 2),
    description      VARCHAR2(1000 CHAR)
);

ALTER TABLE actors_reviews ADD CONSTRAINT actors_reviews_pk PRIMARY KEY ( actor_review_id );

CREATE TABLE categories (
    category_id  INTEGER NOT NULL,
    name         VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE categories ADD CONSTRAINT categories_pk PRIMARY KEY ( category_id );

CREATE TABLE episodes (
    episode_id   INTEGER NOT NULL,
    season_id    INTEGER NOT NULL,
    name         VARCHAR2(50 CHAR) NOT NULL,
    description  VARCHAR2(1000 CHAR)
);

ALTER TABLE episodes ADD CONSTRAINT episodes_pk PRIMARY KEY ( episode_id );

CREATE TABLE movies (
    movie_id       INTEGER NOT NULL,
    name           VARCHAR2(100 CHAR) NOT NULL,
    rating         NUMBER(4, 2),
    premiere_date  DATE,
    description    VARCHAR2(1000 CHAR),
    country        VARCHAR2(30 CHAR),
    director       VARCHAR2(50 CHAR),
    scenario       VARCHAR2(50 CHAR)
);

ALTER TABLE movies ADD CONSTRAINT movies_pk PRIMARY KEY ( movie_id );

CREATE TABLE movies_actors (
    movie_actor_id  INTEGER NOT NULL,
    actor_id        INTEGER NOT NULL,
    movie_id        INTEGER NOT NULL
);

ALTER TABLE movies_actors ADD CONSTRAINT movies_actors_pk PRIMARY KEY ( movie_actor_id );

CREATE TABLE movies_categories (
    movie_category_id  INTEGER NOT NULL,
    category_id        INTEGER NOT NULL,
    movie_id           INTEGER NOT NULL
);

ALTER TABLE movies_categories ADD CONSTRAINT movies_categories_pk PRIMARY KEY ( movie_category_id );

CREATE TABLE movies_reviews (
    movie_review_id  INTEGER NOT NULL,
    user_id          INTEGER NOT NULL,
    movie_id         INTEGER NOT NULL,
    rating           NUMBER(4, 2),
    description      VARCHAR2(1000 CHAR)
);

ALTER TABLE movies_reviews ADD CONSTRAINT movies_reviews_pk PRIMARY KEY ( movie_review_id );

CREATE TABLE seasons (
    season_id    INTEGER NOT NULL,
    series_id    INTEGER NOT NULL,
    episodes     INTEGER NOT NULL,
    name         VARCHAR2(100 CHAR) NOT NULL,
    description  VARCHAR2(1000 CHAR)
);

ALTER TABLE seasons ADD CONSTRAINT seasons_pk PRIMARY KEY ( season_id );

CREATE TABLE series (
    series_id    INTEGER NOT NULL,
    name         VARCHAR2(100 CHAR) NOT NULL,
    seasons      INTEGER NOT NULL,
    rating       NUMBER(4, 2),
    starts_date  DATE,
    ends_date    DATE,
    description  VARCHAR2(1000 CHAR),
    country      VARCHAR2(30 CHAR)
);

ALTER TABLE series ADD CONSTRAINT series_pk PRIMARY KEY ( series_id );

CREATE TABLE series_actors (
    series_actor_id  INTEGER NOT NULL,
    actor_id         INTEGER NOT NULL,
    series_id        INTEGER NOT NULL
);

ALTER TABLE series_actors ADD CONSTRAINT series_actors_pk PRIMARY KEY ( series_actor_id );

CREATE TABLE series_categories (
    series_category_id  INTEGER NOT NULL,
    category_id         INTEGER NOT NULL,
    series_id           INTEGER NOT NULL
);

ALTER TABLE series_categories ADD CONSTRAINT series_categories_pk PRIMARY KEY ( series_category_id );

CREATE TABLE series_reviews (
    series_review_id  INTEGER NOT NULL,
    user_id           INTEGER NOT NULL,
    series_id         INTEGER NOT NULL,
    rating            NUMBER(4, 2),
    description       VARCHAR2(1000 CHAR)
);

ALTER TABLE series_reviews ADD CONSTRAINT series_reviews_pk PRIMARY KEY ( series_review_id );

CREATE TABLE users (
    user_id   INTEGER NOT NULL,
    name      VARCHAR2(30 CHAR) NOT NULL,
    password  VARCHAR2(30 CHAR) NOT NULL,
    email     VARCHAR2(50 CHAR) NOT NULL
);

ALTER TABLE users ADD CONSTRAINT users_pk PRIMARY KEY ( user_id );

ALTER TABLE actors_reviews
    ADD CONSTRAINT actor_id FOREIGN KEY ( actor_id )
        REFERENCES actors ( actor_id );

ALTER TABLE actors_reviews
    ADD CONSTRAINT actors_reviews_users_fk FOREIGN KEY ( user_id )
        REFERENCES users ( user_id );

ALTER TABLE episodes
    ADD CONSTRAINT episodes_seasons_fk FOREIGN KEY ( season_id )
        REFERENCES seasons ( season_id );

ALTER TABLE movies_actors
    ADD CONSTRAINT movies_actors_actors_fk FOREIGN KEY ( actor_id )
        REFERENCES actors ( actor_id );

ALTER TABLE movies_actors
    ADD CONSTRAINT movies_actors_movies_fk FOREIGN KEY ( movie_id )
        REFERENCES movies ( movie_id );

ALTER TABLE movies_categories
    ADD CONSTRAINT movies_categories_fk FOREIGN KEY ( category_id )
        REFERENCES categories ( category_id );

ALTER TABLE movies_categories
    ADD CONSTRAINT movies_movies_fk FOREIGN KEY ( movie_id )
        REFERENCES movies ( movie_id );

ALTER TABLE movies_reviews
    ADD CONSTRAINT movies_reviews_movies_fk FOREIGN KEY ( movie_id )
        REFERENCES movies ( movie_id );

ALTER TABLE movies_reviews
    ADD CONSTRAINT movies_reviews_users_fk FOREIGN KEY ( user_id )
        REFERENCES users ( user_id );

ALTER TABLE seasons
    ADD CONSTRAINT seasons_series_fk FOREIGN KEY ( series_id )
        REFERENCES series ( series_id );

ALTER TABLE series_actors
    ADD CONSTRAINT series_actors_actors_fk FOREIGN KEY ( actor_id )
        REFERENCES actors ( actor_id );

ALTER TABLE series_actors
    ADD CONSTRAINT series_actors_series_fk FOREIGN KEY ( series_id )
        REFERENCES series ( series_id );

ALTER TABLE series_categories
    ADD CONSTRAINT series_categories_fk FOREIGN KEY ( category_id )
        REFERENCES categories ( category_id );

ALTER TABLE series_reviews
    ADD CONSTRAINT series_reviews_series_fk FOREIGN KEY ( series_id )
        REFERENCES series ( series_id );

ALTER TABLE series_reviews
    ADD CONSTRAINT series_reviews_users_fk FOREIGN KEY ( user_id )
        REFERENCES users ( user_id );

ALTER TABLE series_categories
    ADD CONSTRAINT series_series_fk FOREIGN KEY ( series_id )
        REFERENCES series ( series_id );

CREATE SEQUENCE actors_actor_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER actors_actor_id_trg BEFORE
    INSERT ON actors
    FOR EACH ROW
    WHEN ( new.actor_id IS NULL )
BEGIN
    :new.actor_id := actors_actor_id_seq.nextval;
END;
/

CREATE SEQUENCE actors_reviews_actor_review_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER actors_reviews_actor_review_id BEFORE
    INSERT ON actors_reviews
    FOR EACH ROW
    WHEN ( new.actor_review_id IS NULL )
BEGIN
    :new.actor_review_id := actors_reviews_actor_review_id.nextval;
END;
/

CREATE SEQUENCE categories_category_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER categories_category_id_trg BEFORE
    INSERT ON categories
    FOR EACH ROW
    WHEN ( new.category_id IS NULL )
BEGIN
    :new.category_id := categories_category_id_seq.nextval;
END;
/

CREATE SEQUENCE episodes_episode_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER episodes_episode_id_trg BEFORE
    INSERT ON episodes
    FOR EACH ROW
    WHEN ( new.episode_id IS NULL )
BEGIN
    :new.episode_id := episodes_episode_id_seq.nextval;
END;
/

CREATE SEQUENCE movies_movie_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER movies_movie_id_trg BEFORE
    INSERT ON movies
    FOR EACH ROW
    WHEN ( new.movie_id IS NULL )
BEGIN
    :new.movie_id := movies_movie_id_seq.nextval;
END;
/

CREATE SEQUENCE movies_actors_movie_actor_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER movies_actors_movie_actor_id BEFORE
    INSERT ON movies_actors
    FOR EACH ROW
    WHEN ( new.movie_actor_id IS NULL )
BEGIN
    :new.movie_actor_id := movies_actors_movie_actor_id.nextval;
END;
/

CREATE SEQUENCE movies_categories_movie_catego START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER movies_categories_movie_catego BEFORE
    INSERT ON movies_categories
    FOR EACH ROW
    WHEN ( new.movie_category_id IS NULL )
BEGIN
    :new.movie_category_id := movies_categories_movie_catego.nextval;
END;
/

CREATE SEQUENCE movies_reviews_movie_review_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER movies_reviews_movie_review_id BEFORE
    INSERT ON movies_reviews
    FOR EACH ROW
    WHEN ( new.movie_review_id IS NULL )
BEGIN
    :new.movie_review_id := movies_reviews_movie_review_id.nextval;
END;
/

CREATE SEQUENCE seasons_season_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER seasons_season_id_trg BEFORE
    INSERT ON seasons
    FOR EACH ROW
    WHEN ( new.season_id IS NULL )
BEGIN
    :new.season_id := seasons_season_id_seq.nextval;
END;
/

CREATE SEQUENCE series_series_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER series_series_id_trg BEFORE
    INSERT ON series
    FOR EACH ROW
    WHEN ( new.series_id IS NULL )
BEGIN
    :new.series_id := series_series_id_seq.nextval;
END;
/

CREATE SEQUENCE series_actors_series_actor_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER series_actors_series_actor_id BEFORE
    INSERT ON series_actors
    FOR EACH ROW
    WHEN ( new.series_actor_id IS NULL )
BEGIN
    :new.series_actor_id := series_actors_series_actor_id.nextval;
END;
/

CREATE SEQUENCE series_categories_series_categ START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER series_categories_series_categ BEFORE
    INSERT ON series_categories
    FOR EACH ROW
    WHEN ( new.series_category_id IS NULL )
BEGIN
    :new.series_category_id := series_categories_series_categ.nextval;
END;
/

CREATE SEQUENCE series_reviews_series_review_i START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER series_reviews_series_review_i BEFORE
    INSERT ON series_reviews
    FOR EACH ROW
    WHEN ( new.series_review_id IS NULL )
BEGIN
    :new.series_review_id := series_reviews_series_review_i.nextval;
END;
/

CREATE SEQUENCE users_user_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER users_user_id_trg BEFORE
    INSERT ON users
    FOR EACH ROW
    WHEN ( new.user_id IS NULL )
BEGIN
    :new.user_id := users_user_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            14
-- CREATE INDEX                             0
-- ALTER TABLE                             30
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          14
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         14
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
